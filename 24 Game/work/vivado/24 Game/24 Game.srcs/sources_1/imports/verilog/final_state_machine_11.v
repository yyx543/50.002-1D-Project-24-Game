/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module final_state_machine_11 (
    input clk,
    input rst,
    input [15:0] rbdata,
    input st,
    input confirm_button,
    input reset_button,
    input button1,
    input button2,
    input button3,
    input button4,
    input plus_button,
    input sub_button,
    input mul_button,
    output reg [5:0] alufn,
    output reg [1:0] asel,
    output reg [1:0] bsel,
    output reg [1:0] wdsel,
    output reg we,
    output reg [3:0] ra,
    output reg [3:0] rb,
    output reg [3:0] rc,
    output reg [1:0] numsel,
    output reg randsel,
    output reg timer_decrease,
    output reg timer_set_sixty
  );
  
  
  
  localparam START_state = 9'd0;
  localparam START_TIMER_state = 9'd1;
  localparam RANDSEL_state = 9'd2;
  localparam FIRST_INTEGER_state = 9'd3;
  localparam SECOND_INTEGER_state = 9'd4;
  localparam THIRD_INTEGER_state = 9'd5;
  localparam FOURTH_INTEGER_state = 9'd6;
  localparam RESET_POINTS_state = 9'd7;
  localparam RESET_FIRST_INPUT_state = 9'd8;
  localparam RESET_SECOND_INPUT_state = 9'd9;
  localparam RESET_THIRD_INPUT_state = 9'd10;
  localparam RESET_FOURTH_INPUT_state = 9'd11;
  localparam RESET_FIRST_OP_state = 9'd12;
  localparam RESET_SECOND_OP_state = 9'd13;
  localparam RESET_THIRD_OP_state = 9'd14;
  localparam IDLE_state = 9'd15;
  localparam DECREASE_TIMER_state = 9'd16;
  localparam CHECK_TIMER_state = 9'd17;
  localparam BRANCH_TIMER_state = 9'd18;
  localparam CHECK_RESULT_TIMER_state = 9'd19;
  localparam BRANCH_RESULT_TIMER_state = 9'd20;
  localparam DECREASE_RESULT_TIMER_state = 9'd21;
  localparam RESET_RESULT_REG_state = 9'd22;
  localparam GAMEOVER_state = 9'd23;
  localparam INP1A_state = 9'd24;
  localparam BRANCHINP1A_state = 9'd25;
  localparam INP2A_state = 9'd26;
  localparam BRANCHINP2A_state = 9'd27;
  localparam INP3A_state = 9'd28;
  localparam BRANCHINP3A_state = 9'd29;
  localparam INP4A_state = 9'd30;
  localparam BRANCHINP4A_state = 9'd31;
  localparam DECREASE_TIMER1A_state = 9'd32;
  localparam CHECK_TIMER1A_state = 9'd33;
  localparam BRANCH_TIMER1A_state = 9'd34;
  localparam CHECK_RESULT_TIMER1A_state = 9'd35;
  localparam BRANCH_RESULT_TIMER1A_state = 9'd36;
  localparam DECREASE_RESULT_TIMER1A_state = 9'd37;
  localparam RESET_RESULT_REG1A_state = 9'd38;
  localparam DECREASE_TIMER2A_state = 9'd39;
  localparam CHECK_TIMER2A_state = 9'd40;
  localparam BRANCH_TIMER2A_state = 9'd41;
  localparam CHECK_RESULT_TIMER2A_state = 9'd42;
  localparam BRANCH_RESULT_TIMER2A_state = 9'd43;
  localparam DECREASE_RESULT_TIMER2A_state = 9'd44;
  localparam RESET_RESULT_REG2A_state = 9'd45;
  localparam DECREASE_TIMER3A_state = 9'd46;
  localparam CHECK_TIMER3A_state = 9'd47;
  localparam BRANCH_TIMER3A_state = 9'd48;
  localparam CHECK_RESULT_TIMER3A_state = 9'd49;
  localparam BRANCH_RESULT_TIMER3A_state = 9'd50;
  localparam DECREASE_RESULT_TIMER3A_state = 9'd51;
  localparam RESET_RESULT_REG3A_state = 9'd52;
  localparam DECREASE_TIMER4A_state = 9'd53;
  localparam CHECK_TIMER4A_state = 9'd54;
  localparam BRANCH_TIMER4A_state = 9'd55;
  localparam CHECK_RESULT_TIMER4A_state = 9'd56;
  localparam BRANCH_RESULT_TIMER4A_state = 9'd57;
  localparam DECREASE_RESULT_TIMER4A_state = 9'd58;
  localparam RESET_RESULT_REG4A_state = 9'd59;
  localparam INP1ADD_state = 9'd60;
  localparam INP1SUB_state = 9'd61;
  localparam INP1MUL_state = 9'd62;
  localparam INP2ADD_state = 9'd63;
  localparam INP2SUB_state = 9'd64;
  localparam INP2MUL_state = 9'd65;
  localparam INP3ADD_state = 9'd66;
  localparam INP3SUB_state = 9'd67;
  localparam INP3MUL_state = 9'd68;
  localparam INP4ADD_state = 9'd69;
  localparam INP4SUB_state = 9'd70;
  localparam INP4MUL_state = 9'd71;
  localparam INP1B_state = 9'd72;
  localparam INP2B_state = 9'd73;
  localparam INP3B_state = 9'd74;
  localparam INP4B_state = 9'd75;
  localparam DECREASE_TIMER1B_state = 9'd76;
  localparam CHECK_TIMER1B_state = 9'd77;
  localparam BRANCH_TIMER1B_state = 9'd78;
  localparam CHECK_RESULT_TIMER1B_state = 9'd79;
  localparam BRANCH_RESULT_TIMER1B_state = 9'd80;
  localparam DECREASE_RESULT_TIMER1B_state = 9'd81;
  localparam RESET_RESULT_REG1B_state = 9'd82;
  localparam DECREASE_TIMER2B_state = 9'd83;
  localparam CHECK_TIMER2B_state = 9'd84;
  localparam BRANCH_TIMER2B_state = 9'd85;
  localparam CHECK_RESULT_TIMER2B_state = 9'd86;
  localparam BRANCH_RESULT_TIMER2B_state = 9'd87;
  localparam DECREASE_RESULT_TIMER2B_state = 9'd88;
  localparam RESET_RESULT_REG2B_state = 9'd89;
  localparam DECREASE_TIMER3B_state = 9'd90;
  localparam CHECK_TIMER3B_state = 9'd91;
  localparam BRANCH_TIMER3B_state = 9'd92;
  localparam CHECK_RESULT_TIMER3B_state = 9'd93;
  localparam BRANCH_RESULT_TIMER3B_state = 9'd94;
  localparam DECREASE_RESULT_TIMER3B_state = 9'd95;
  localparam RESET_RESULT_REG3B_state = 9'd96;
  localparam DECREASE_TIMER4B_state = 9'd97;
  localparam CHECK_TIMER4B_state = 9'd98;
  localparam BRANCH_TIMER4B_state = 9'd99;
  localparam CHECK_RESULT_TIMER4B_state = 9'd100;
  localparam BRANCH_RESULT_TIMER4B_state = 9'd101;
  localparam DECREASE_RESULT_TIMER4B_state = 9'd102;
  localparam RESET_RESULT_REG4B_state = 9'd103;
  localparam INP12A_state = 9'd104;
  localparam INP13A_state = 9'd105;
  localparam INP14A_state = 9'd106;
  localparam INP21A_state = 9'd107;
  localparam INP23A_state = 9'd108;
  localparam INP24A_state = 9'd109;
  localparam INP31A_state = 9'd110;
  localparam INP32A_state = 9'd111;
  localparam INP34A_state = 9'd112;
  localparam INP41A_state = 9'd113;
  localparam INP42A_state = 9'd114;
  localparam INP43A_state = 9'd115;
  localparam BRANCHINP12A_state = 9'd116;
  localparam BRANCHINP13A_state = 9'd117;
  localparam BRANCHINP14A_state = 9'd118;
  localparam BRANCHINP23A_state = 9'd119;
  localparam BRANCHINP24A_state = 9'd120;
  localparam BRANCHINP34A_state = 9'd121;
  localparam DECREASE_TIMER12A_state = 9'd122;
  localparam CHECK_TIMER12A_state = 9'd123;
  localparam BRANCH_TIMER12A_state = 9'd124;
  localparam CHECK_RESULT_TIMER12A_state = 9'd125;
  localparam BRANCH_RESULT_TIMER12A_state = 9'd126;
  localparam DECREASE_RESULT_TIMER12A_state = 9'd127;
  localparam RESET_RESULT_REG12A_state = 9'd128;
  localparam DECREASE_TIMER13A_state = 9'd129;
  localparam CHECK_TIMER13A_state = 9'd130;
  localparam BRANCH_TIMER13A_state = 9'd131;
  localparam CHECK_RESULT_TIMER13A_state = 9'd132;
  localparam BRANCH_RESULT_TIMER13A_state = 9'd133;
  localparam DECREASE_RESULT_TIMER13A_state = 9'd134;
  localparam RESET_RESULT_REG13A_state = 9'd135;
  localparam DECREASE_TIMER14A_state = 9'd136;
  localparam CHECK_TIMER14A_state = 9'd137;
  localparam BRANCH_TIMER14A_state = 9'd138;
  localparam CHECK_RESULT_TIMER14A_state = 9'd139;
  localparam BRANCH_RESULT_TIMER14A_state = 9'd140;
  localparam DECREASE_RESULT_TIMER14A_state = 9'd141;
  localparam RESET_RESULT_REG14A_state = 9'd142;
  localparam DECREASE_TIMER23A_state = 9'd143;
  localparam CHECK_TIMER23A_state = 9'd144;
  localparam BRANCH_TIMER23A_state = 9'd145;
  localparam CHECK_RESULT_TIMER23A_state = 9'd146;
  localparam BRANCH_RESULT_TIMER23A_state = 9'd147;
  localparam DECREASE_RESULT_TIMER23A_state = 9'd148;
  localparam RESET_RESULT_REG23A_state = 9'd149;
  localparam DECREASE_TIMER24A_state = 9'd150;
  localparam CHECK_TIMER24A_state = 9'd151;
  localparam BRANCH_TIMER24A_state = 9'd152;
  localparam CHECK_RESULT_TIMER24A_state = 9'd153;
  localparam BRANCH_RESULT_TIMER24A_state = 9'd154;
  localparam DECREASE_RESULT_TIMER24A_state = 9'd155;
  localparam RESET_RESULT_REG24A_state = 9'd156;
  localparam DECREASE_TIMER34A_state = 9'd157;
  localparam CHECK_TIMER34A_state = 9'd158;
  localparam BRANCH_TIMER34A_state = 9'd159;
  localparam CHECK_RESULT_TIMER34A_state = 9'd160;
  localparam BRANCH_RESULT_TIMER34A_state = 9'd161;
  localparam DECREASE_RESULT_TIMER34A_state = 9'd162;
  localparam RESET_RESULT_REG34A_state = 9'd163;
  localparam INP12ADD_state = 9'd164;
  localparam INP12SUB_state = 9'd165;
  localparam INP12MUL_state = 9'd166;
  localparam INP13ADD_state = 9'd167;
  localparam INP13SUB_state = 9'd168;
  localparam INP13MUL_state = 9'd169;
  localparam INP14ADD_state = 9'd170;
  localparam INP14SUB_state = 9'd171;
  localparam INP14MUL_state = 9'd172;
  localparam INP23ADD_state = 9'd173;
  localparam INP23SUB_state = 9'd174;
  localparam INP23MUL_state = 9'd175;
  localparam INP24ADD_state = 9'd176;
  localparam INP24SUB_state = 9'd177;
  localparam INP24MUL_state = 9'd178;
  localparam INP34ADD_state = 9'd179;
  localparam INP34SUB_state = 9'd180;
  localparam INP34MUL_state = 9'd181;
  localparam INP12B_state = 9'd182;
  localparam INP13B_state = 9'd183;
  localparam INP14B_state = 9'd184;
  localparam INP23B_state = 9'd185;
  localparam INP24B_state = 9'd186;
  localparam INP34B_state = 9'd187;
  localparam DECREASE_TIMER12B_state = 9'd188;
  localparam CHECK_TIMER12B_state = 9'd189;
  localparam BRANCH_TIMER12B_state = 9'd190;
  localparam CHECK_RESULT_TIMER12B_state = 9'd191;
  localparam BRANCH_RESULT_TIMER12B_state = 9'd192;
  localparam DECREASE_RESULT_TIMER12B_state = 9'd193;
  localparam RESET_RESULT_REG12B_state = 9'd194;
  localparam DECREASE_TIMER13B_state = 9'd195;
  localparam CHECK_TIMER13B_state = 9'd196;
  localparam BRANCH_TIMER13B_state = 9'd197;
  localparam CHECK_RESULT_TIMER13B_state = 9'd198;
  localparam BRANCH_RESULT_TIMER13B_state = 9'd199;
  localparam DECREASE_RESULT_TIMER13B_state = 9'd200;
  localparam RESET_RESULT_REG13B_state = 9'd201;
  localparam DECREASE_TIMER14B_state = 9'd202;
  localparam CHECK_TIMER14B_state = 9'd203;
  localparam BRANCH_TIMER14B_state = 9'd204;
  localparam CHECK_RESULT_TIMER14B_state = 9'd205;
  localparam BRANCH_RESULT_TIMER14B_state = 9'd206;
  localparam DECREASE_RESULT_TIMER14B_state = 9'd207;
  localparam RESET_RESULT_REG14B_state = 9'd208;
  localparam DECREASE_TIMER23B_state = 9'd209;
  localparam CHECK_TIMER23B_state = 9'd210;
  localparam BRANCH_TIMER23B_state = 9'd211;
  localparam CHECK_RESULT_TIMER23B_state = 9'd212;
  localparam BRANCH_RESULT_TIMER23B_state = 9'd213;
  localparam DECREASE_RESULT_TIMER23B_state = 9'd214;
  localparam RESET_RESULT_REG23B_state = 9'd215;
  localparam DECREASE_TIMER24B_state = 9'd216;
  localparam CHECK_TIMER24B_state = 9'd217;
  localparam BRANCH_TIMER24B_state = 9'd218;
  localparam CHECK_RESULT_TIMER24B_state = 9'd219;
  localparam BRANCH_RESULT_TIMER24B_state = 9'd220;
  localparam DECREASE_RESULT_TIMER24B_state = 9'd221;
  localparam RESET_RESULT_REG24B_state = 9'd222;
  localparam DECREASE_TIMER34B_state = 9'd223;
  localparam CHECK_TIMER34B_state = 9'd224;
  localparam BRANCH_TIMER34B_state = 9'd225;
  localparam CHECK_RESULT_TIMER34B_state = 9'd226;
  localparam BRANCH_RESULT_TIMER34B_state = 9'd227;
  localparam DECREASE_RESULT_TIMER34B_state = 9'd228;
  localparam RESET_RESULT_REG34B_state = 9'd229;
  localparam INP123A_state = 9'd230;
  localparam INP124A_state = 9'd231;
  localparam INP132A_state = 9'd232;
  localparam INP134A_state = 9'd233;
  localparam INP142A_state = 9'd234;
  localparam INP143A_state = 9'd235;
  localparam INP231A_state = 9'd236;
  localparam INP234A_state = 9'd237;
  localparam INP241A_state = 9'd238;
  localparam INP243A_state = 9'd239;
  localparam INP341A_state = 9'd240;
  localparam INP342A_state = 9'd241;
  localparam BRANCHINP123A_state = 9'd242;
  localparam BRANCHINP124A_state = 9'd243;
  localparam BRANCHINP134A_state = 9'd244;
  localparam BRANCHINP234A_state = 9'd245;
  localparam DECREASE_TIMER123A_state = 9'd246;
  localparam CHECK_TIMER123A_state = 9'd247;
  localparam BRANCH_TIMER123A_state = 9'd248;
  localparam CHECK_RESULT_TIMER123A_state = 9'd249;
  localparam BRANCH_RESULT_TIMER123A_state = 9'd250;
  localparam DECREASE_RESULT_TIMER123A_state = 9'd251;
  localparam RESET_RESULT_REG123A_state = 9'd252;
  localparam DECREASE_TIMER124A_state = 9'd253;
  localparam CHECK_TIMER124A_state = 9'd254;
  localparam BRANCH_TIMER124A_state = 9'd255;
  localparam CHECK_RESULT_TIMER124A_state = 9'd256;
  localparam BRANCH_RESULT_TIMER124A_state = 9'd257;
  localparam DECREASE_RESULT_TIMER124A_state = 9'd258;
  localparam RESET_RESULT_REG124A_state = 9'd259;
  localparam DECREASE_TIMER134A_state = 9'd260;
  localparam CHECK_TIMER134A_state = 9'd261;
  localparam BRANCH_TIMER134A_state = 9'd262;
  localparam CHECK_RESULT_TIMER134A_state = 9'd263;
  localparam BRANCH_RESULT_TIMER134A_state = 9'd264;
  localparam DECREASE_RESULT_TIMER134A_state = 9'd265;
  localparam RESET_RESULT_REG134A_state = 9'd266;
  localparam DECREASE_TIMER234A_state = 9'd267;
  localparam CHECK_TIMER234A_state = 9'd268;
  localparam BRANCH_TIMER234A_state = 9'd269;
  localparam CHECK_RESULT_TIMER234A_state = 9'd270;
  localparam BRANCH_RESULT_TIMER234A_state = 9'd271;
  localparam DECREASE_RESULT_TIMER234A_state = 9'd272;
  localparam RESET_RESULT_REG234A_state = 9'd273;
  localparam INP123ADD_state = 9'd274;
  localparam INP123SUB_state = 9'd275;
  localparam INP123MUL_state = 9'd276;
  localparam INP124ADD_state = 9'd277;
  localparam INP124SUB_state = 9'd278;
  localparam INP124MUL_state = 9'd279;
  localparam INP134ADD_state = 9'd280;
  localparam INP134SUB_state = 9'd281;
  localparam INP134MUL_state = 9'd282;
  localparam INP234ADD_state = 9'd283;
  localparam INP234SUB_state = 9'd284;
  localparam INP234MUL_state = 9'd285;
  localparam INP123B_state = 9'd286;
  localparam INP124B_state = 9'd287;
  localparam INP134B_state = 9'd288;
  localparam INP234B_state = 9'd289;
  localparam DECREASE_TIMER123B_state = 9'd290;
  localparam CHECK_TIMER123B_state = 9'd291;
  localparam BRANCH_TIMER123B_state = 9'd292;
  localparam CHECK_RESULT_TIMER123B_state = 9'd293;
  localparam BRANCH_RESULT_TIMER123B_state = 9'd294;
  localparam DECREASE_RESULT_TIMER123B_state = 9'd295;
  localparam RESET_RESULT_REG123B_state = 9'd296;
  localparam DECREASE_TIMER124B_state = 9'd297;
  localparam CHECK_TIMER124B_state = 9'd298;
  localparam BRANCH_TIMER124B_state = 9'd299;
  localparam CHECK_RESULT_TIMER124B_state = 9'd300;
  localparam BRANCH_RESULT_TIMER124B_state = 9'd301;
  localparam DECREASE_RESULT_TIMER124B_state = 9'd302;
  localparam RESET_RESULT_REG124B_state = 9'd303;
  localparam DECREASE_TIMER134B_state = 9'd304;
  localparam CHECK_TIMER134B_state = 9'd305;
  localparam BRANCH_TIMER134B_state = 9'd306;
  localparam CHECK_RESULT_TIMER134B_state = 9'd307;
  localparam BRANCH_RESULT_TIMER134B_state = 9'd308;
  localparam DECREASE_RESULT_TIMER134B_state = 9'd309;
  localparam RESET_RESULT_REG134B_state = 9'd310;
  localparam DECREASE_TIMER234B_state = 9'd311;
  localparam CHECK_TIMER234B_state = 9'd312;
  localparam BRANCH_TIMER234B_state = 9'd313;
  localparam CHECK_RESULT_TIMER234B_state = 9'd314;
  localparam BRANCH_RESULT_TIMER234B_state = 9'd315;
  localparam DECREASE_RESULT_TIMER234B_state = 9'd316;
  localparam RESET_RESULT_REG234B_state = 9'd317;
  localparam INPXXX1_state = 9'd318;
  localparam INPXXX2_state = 9'd319;
  localparam INPXXX3_state = 9'd320;
  localparam INPXXX4_state = 9'd321;
  localparam CONFIRM_state = 9'd322;
  localparam DECREASE_TIMER_CONFIRM_state = 9'd323;
  localparam CHECK_TIMER_CONFIRM_state = 9'd324;
  localparam BRANCH_TIMER_CONFIRM_state = 9'd325;
  localparam CHECK_RESULT_TIMER_CONFIRM_state = 9'd326;
  localparam BRANCH_RESULT_TIMER_CONFIRM_state = 9'd327;
  localparam DECREASE_RESULT_TIMER_CONFIRM_state = 9'd328;
  localparam RESET_RESULT_REG_CONFIRM_state = 9'd329;
  localparam OP1X_state = 9'd330;
  localparam BRANCHOP1X_state = 9'd331;
  localparam OP1AB_state = 9'd332;
  localparam OP12X_state = 9'd333;
  localparam BRANCHOP12X_state = 9'd334;
  localparam OP12BC_state = 9'd335;
  localparam OP123X_state = 9'd336;
  localparam BRANCHOP123X_state = 9'd337;
  localparam OP123CD_state = 9'd338;
  localparam OP123_state = 9'd339;
  localparam BRANCHOP123_state = 9'd340;
  localparam OP123CD1_state = 9'd341;
  localparam OP123CD2_state = 9'd342;
  localparam OP13X_state = 9'd343;
  localparam BRANCHOP13X_state = 9'd344;
  localparam OP13CD_state = 9'd345;
  localparam OP132_state = 9'd346;
  localparam BRANCHOP132_state = 9'd347;
  localparam OP132BC1_state = 9'd348;
  localparam OP132BC2_state = 9'd349;
  localparam OP12_state = 9'd350;
  localparam BRANCHOP12_state = 9'd351;
  localparam OP12BC1_state = 9'd352;
  localparam OP12BC2_state = 9'd353;
  localparam OP2X_state = 9'd354;
  localparam BRANCHOP2X_state = 9'd355;
  localparam OP2BC_state = 9'd356;
  localparam OP23X_state = 9'd357;
  localparam BRANCHOP23X_state = 9'd358;
  localparam OP23CD_state = 9'd359;
  localparam OP231_state = 9'd360;
  localparam BRANCHOP231_state = 9'd361;
  localparam OP231AC1_state = 9'd362;
  localparam OP231AC2_state = 9'd363;
  localparam OP21_state = 9'd364;
  localparam BRANCHOP21_state = 9'd365;
  localparam OP21AC1_state = 9'd366;
  localparam OP21AC2_state = 9'd367;
  localparam OP3X_state = 9'd368;
  localparam BRANCHOP3X_state = 9'd369;
  localparam OP3CD_state = 9'd370;
  localparam OP31_state = 9'd371;
  localparam BRANCHOP31_state = 9'd372;
  localparam OP31AB1_state = 9'd373;
  localparam OP31AB2_state = 9'd374;
  localparam OP1_state = 9'd375;
  localparam BRANCHOP1_state = 9'd376;
  localparam OP1AB1_state = 9'd377;
  localparam OP1AB2_state = 9'd378;
  localparam CHECK_C24_state = 9'd379;
  localparam BRANCH_CHECK_C24_state = 9'd380;
  localparam RED_LED_state = 9'd381;
  localparam RED_LED_TIMER_state = 9'd382;
  localparam GREEN_LED_state = 9'd383;
  localparam GREEN_LED_TIMER_state = 9'd384;
  localparam ADD_POINT_state = 9'd385;
  
  reg [8:0] M_state_d, M_state_q = START_state;
  
  always @* begin
    M_state_d = M_state_q;
    
    alufn = 6'h00;
    we = 1'h0;
    asel = 2'h0;
    bsel = 2'h0;
    wdsel = 2'h0;
    ra = 4'h0;
    rb = 4'h0;
    rc = 4'h0;
    randsel = 1'h0;
    numsel = 2'h0;
    timer_decrease = 1'h0;
    timer_set_sixty = 1'h0;
    if (rst) begin
      M_state_d = START_state;
    end else begin
      
      case (M_state_q)
        START_state: begin
          we = 1'h0;
          if (confirm_button) begin
            M_state_d = START_TIMER_state;
          end
        end
        START_TIMER_state: begin
          we = 1'h1;
          rb = 4'h6;
          rc = 4'h6;
          wdsel = 2'h2;
          if (rbdata == 6'h3c) begin
            timer_set_sixty = 1'h1;
            M_state_d = RESET_POINTS_state;
          end
        end
        RESET_POINTS_state: begin
          we = 1'h1;
          rc = 4'h5;
          wdsel = 2'h1;
          M_state_d = RANDSEL_state;
        end
        RANDSEL_state: begin
          we = 1'h0;
          randsel = 1'h1;
          M_state_d = FIRST_INTEGER_state;
        end
        FIRST_INTEGER_state: begin
          we = 1'h1;
          rc = 4'h0;
          wdsel = 2'h3;
          numsel = 2'h0;
          randsel = 1'h0;
          M_state_d = SECOND_INTEGER_state;
        end
        SECOND_INTEGER_state: begin
          we = 1'h1;
          rc = 4'h1;
          wdsel = 2'h3;
          numsel = 2'h1;
          randsel = 1'h0;
          M_state_d = THIRD_INTEGER_state;
        end
        THIRD_INTEGER_state: begin
          we = 1'h1;
          rc = 4'h2;
          wdsel = 2'h3;
          numsel = 2'h2;
          randsel = 1'h0;
          M_state_d = FOURTH_INTEGER_state;
        end
        FOURTH_INTEGER_state: begin
          we = 1'h1;
          rc = 4'h3;
          wdsel = 2'h3;
          numsel = 2'h3;
          randsel = 1'h0;
          M_state_d = RESET_FIRST_INPUT_state;
        end
        RESET_FIRST_INPUT_state: begin
          we = 1'h1;
          rc = 4'h7;
          wdsel = 2'h1;
          M_state_d = RESET_SECOND_INPUT_state;
        end
        RESET_SECOND_INPUT_state: begin
          we = 1'h1;
          rc = 4'h8;
          wdsel = 2'h1;
          M_state_d = RESET_THIRD_INPUT_state;
        end
        RESET_THIRD_INPUT_state: begin
          we = 1'h1;
          rc = 4'h9;
          wdsel = 2'h1;
          M_state_d = RESET_FOURTH_INPUT_state;
        end
        RESET_FOURTH_INPUT_state: begin
          we = 1'h1;
          rc = 4'ha;
          wdsel = 2'h1;
          M_state_d = RESET_FIRST_OP_state;
        end
        RESET_FIRST_OP_state: begin
          we = 1'h1;
          rc = 4'hb;
          wdsel = 2'h1;
          M_state_d = RESET_SECOND_OP_state;
        end
        RESET_SECOND_OP_state: begin
          we = 1'h1;
          rc = 4'hc;
          wdsel = 2'h1;
          M_state_d = RESET_THIRD_OP_state;
        end
        RESET_THIRD_OP_state: begin
          we = 1'h1;
          rc = 4'hd;
          wdsel = 2'h1;
          M_state_d = IDLE_state;
        end
        IDLE_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER_state;
          end
          if (button1) begin
            M_state_d = INP1A_state;
          end
          if (button2) begin
            M_state_d = INP2A_state;
          end
          if (button3) begin
            M_state_d = INP3A_state;
          end
          if (button4) begin
            M_state_d = INP4A_state;
          end
        end
        DECREASE_TIMER_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER_state;
        end
        CHECK_TIMER_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER_state;
        end
        BRANCH_TIMER_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER_state;
        end
        BRANCH_RESULT_TIMER_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER_state;
          end else begin
            M_state_d = RESET_RESULT_REG_state;
          end
        end
        RESET_RESULT_REG_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = IDLE_state;
        end
        DECREASE_RESULT_TIMER_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = IDLE_state;
        end
        GAMEOVER_state: begin
          we = 1'h0;
          if (confirm_button) begin
            M_state_d = START_TIMER_state;
          end
        end
        INP1A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h0;
          rc = 4'h7;
          wdsel = 2'h0;
          M_state_d = BRANCHINP1A_state;
        end
        BRANCHINP1A_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER1A_state;
          end
          if (plus_button) begin
            M_state_d = INP1ADD_state;
          end
          if (sub_button) begin
            M_state_d = INP1SUB_state;
          end
          if (mul_button) begin
            M_state_d = INP1MUL_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER1A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER1A_state;
        end
        CHECK_TIMER1A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER1A_state;
        end
        BRANCH_TIMER1A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER1A_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER1A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER1A_state;
        end
        BRANCH_RESULT_TIMER1A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER1A_state;
          end else begin
            M_state_d = RESET_RESULT_REG1A_state;
          end
        end
        RESET_RESULT_REG1A_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = BRANCHINP1A_state;
        end
        DECREASE_RESULT_TIMER1A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = BRANCHINP1A_state;
        end
        INP1ADD_state: begin
          alufn = 6'h00;
          asel = 2'h1;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hb;
          wdsel = 2'h0;
          M_state_d = INP1B_state;
        end
        INP1SUB_state: begin
          alufn = 6'h00;
          asel = 2'h2;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hb;
          wdsel = 2'h0;
          M_state_d = INP1B_state;
        end
        INP1MUL_state: begin
          alufn = 6'h00;
          asel = 2'h3;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hb;
          wdsel = 2'h0;
          M_state_d = INP1B_state;
        end
        INP1B_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER1B_state;
          end
          if (button2) begin
            M_state_d = INP12A_state;
          end
          if (button3) begin
            M_state_d = INP13A_state;
          end
          if (button4) begin
            M_state_d = INP14A_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER1B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER1B_state;
        end
        CHECK_TIMER1B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER1B_state;
        end
        BRANCH_TIMER1B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER1B_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER1B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER1B_state;
        end
        BRANCH_RESULT_TIMER1B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER1B_state;
          end else begin
            M_state_d = RESET_RESULT_REG1B_state;
          end
        end
        RESET_RESULT_REG1B_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = INP1B_state;
        end
        DECREASE_RESULT_TIMER1B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = INP1B_state;
        end
        INP2A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h1;
          rc = 4'h7;
          wdsel = 2'h0;
          M_state_d = BRANCHINP2A_state;
        end
        BRANCHINP2A_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER2A_state;
          end
          if (plus_button) begin
            M_state_d = INP2ADD_state;
          end
          if (sub_button) begin
            M_state_d = INP2SUB_state;
          end
          if (mul_button) begin
            M_state_d = INP2MUL_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER2A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER2A_state;
        end
        CHECK_TIMER2A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER2A_state;
        end
        BRANCH_TIMER2A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER2A_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER2A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER2A_state;
        end
        BRANCH_RESULT_TIMER2A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER2A_state;
          end else begin
            M_state_d = RESET_RESULT_REG2A_state;
          end
        end
        RESET_RESULT_REG2A_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = BRANCHINP2A_state;
        end
        DECREASE_RESULT_TIMER2A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = BRANCHINP2A_state;
        end
        INP2ADD_state: begin
          alufn = 6'h00;
          asel = 2'h1;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hb;
          wdsel = 2'h0;
          M_state_d = INP2B_state;
        end
        INP2SUB_state: begin
          alufn = 6'h00;
          asel = 2'h2;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hb;
          wdsel = 2'h0;
          M_state_d = INP2B_state;
        end
        INP2MUL_state: begin
          alufn = 6'h00;
          asel = 2'h3;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hb;
          wdsel = 2'h0;
          M_state_d = INP2B_state;
        end
        INP2B_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER2B_state;
          end
          if (button1) begin
            M_state_d = INP21A_state;
          end
          if (button3) begin
            M_state_d = INP23A_state;
          end
          if (button4) begin
            M_state_d = INP24A_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER2B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER2B_state;
        end
        CHECK_TIMER2B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER2B_state;
        end
        BRANCH_TIMER2B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER2B_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER2B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER2B_state;
        end
        BRANCH_RESULT_TIMER2B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER2B_state;
          end else begin
            M_state_d = RESET_RESULT_REG2B_state;
          end
        end
        RESET_RESULT_REG2B_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = INP2B_state;
        end
        DECREASE_RESULT_TIMER2B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = INP2B_state;
        end
        INP3A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h2;
          rc = 4'h7;
          wdsel = 2'h0;
          M_state_d = BRANCHINP3A_state;
        end
        BRANCHINP3A_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER3A_state;
          end
          if (plus_button) begin
            M_state_d = INP3ADD_state;
          end
          if (sub_button) begin
            M_state_d = INP3SUB_state;
          end
          if (mul_button) begin
            M_state_d = INP3MUL_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER3A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER3A_state;
        end
        CHECK_TIMER3A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER3A_state;
        end
        BRANCH_TIMER3A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER3A_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER3A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER3A_state;
        end
        BRANCH_RESULT_TIMER3A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER3A_state;
          end else begin
            M_state_d = RESET_RESULT_REG3A_state;
          end
        end
        RESET_RESULT_REG3A_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = BRANCHINP3A_state;
        end
        DECREASE_RESULT_TIMER3A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = BRANCHINP3A_state;
        end
        INP3ADD_state: begin
          alufn = 6'h00;
          asel = 2'h1;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hb;
          wdsel = 2'h0;
          M_state_d = INP3B_state;
        end
        INP3SUB_state: begin
          alufn = 6'h00;
          asel = 2'h2;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hb;
          wdsel = 2'h0;
          M_state_d = INP3B_state;
        end
        INP3MUL_state: begin
          alufn = 6'h00;
          asel = 2'h3;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hb;
          wdsel = 2'h0;
          M_state_d = INP3B_state;
        end
        INP3B_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER3B_state;
          end
          if (button1) begin
            M_state_d = INP31A_state;
          end
          if (button2) begin
            M_state_d = INP32A_state;
          end
          if (button4) begin
            M_state_d = INP34A_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER3B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER3B_state;
        end
        CHECK_TIMER3B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER3B_state;
        end
        BRANCH_TIMER3B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER3B_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER3B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER3B_state;
        end
        BRANCH_RESULT_TIMER3B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER3B_state;
          end else begin
            M_state_d = RESET_RESULT_REG3B_state;
          end
        end
        RESET_RESULT_REG3B_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = INP3B_state;
        end
        DECREASE_RESULT_TIMER3B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = INP3B_state;
        end
        INP4A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h3;
          rc = 4'h7;
          wdsel = 2'h0;
          M_state_d = BRANCHINP4A_state;
        end
        BRANCHINP4A_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER4A_state;
          end
          if (plus_button) begin
            M_state_d = INP4ADD_state;
          end
          if (sub_button) begin
            M_state_d = INP4SUB_state;
          end
          if (mul_button) begin
            M_state_d = INP4MUL_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER4A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER4A_state;
        end
        CHECK_TIMER4A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER4A_state;
        end
        BRANCH_TIMER4A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER4A_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER4A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER4A_state;
        end
        BRANCH_RESULT_TIMER4A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER4A_state;
          end else begin
            M_state_d = RESET_RESULT_REG4A_state;
          end
        end
        RESET_RESULT_REG4A_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = BRANCHINP4A_state;
        end
        DECREASE_RESULT_TIMER4A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = BRANCHINP4A_state;
        end
        INP4ADD_state: begin
          alufn = 6'h00;
          asel = 2'h1;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hb;
          wdsel = 2'h0;
          M_state_d = INP4B_state;
        end
        INP4SUB_state: begin
          alufn = 6'h00;
          asel = 2'h2;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hb;
          wdsel = 2'h0;
          M_state_d = INP4B_state;
        end
        INP4MUL_state: begin
          alufn = 6'h00;
          asel = 2'h3;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hb;
          wdsel = 2'h0;
          M_state_d = INP4B_state;
        end
        INP4B_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER4B_state;
          end
          if (button1) begin
            M_state_d = INP41A_state;
          end
          if (button2) begin
            M_state_d = INP42A_state;
          end
          if (button3) begin
            M_state_d = INP43A_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER4B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER4B_state;
        end
        CHECK_TIMER4B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER4B_state;
        end
        BRANCH_TIMER4B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER4B_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER4B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER4B_state;
        end
        BRANCH_RESULT_TIMER4B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER4B_state;
          end else begin
            M_state_d = RESET_RESULT_REG4B_state;
          end
        end
        RESET_RESULT_REG4B_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = INP4B_state;
        end
        DECREASE_RESULT_TIMER4B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = INP4B_state;
        end
        INP12A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h1;
          rc = 4'h8;
          wdsel = 2'h0;
          M_state_d = BRANCHINP12A_state;
        end
        BRANCHINP12A_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER12A_state;
          end
          if (plus_button) begin
            M_state_d = INP12ADD_state;
          end
          if (sub_button) begin
            M_state_d = INP12SUB_state;
          end
          if (mul_button) begin
            M_state_d = INP12MUL_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER12A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER12A_state;
        end
        CHECK_TIMER12A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER12A_state;
        end
        BRANCH_TIMER12A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER12A_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER12A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER12A_state;
        end
        BRANCH_RESULT_TIMER12A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER12A_state;
          end else begin
            M_state_d = RESET_RESULT_REG12A_state;
          end
        end
        RESET_RESULT_REG12A_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = BRANCHINP12A_state;
        end
        DECREASE_RESULT_TIMER12A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = BRANCHINP12A_state;
        end
        INP12ADD_state: begin
          alufn = 6'h00;
          asel = 2'h1;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hc;
          wdsel = 2'h0;
          M_state_d = INP12B_state;
        end
        INP12SUB_state: begin
          alufn = 6'h00;
          asel = 2'h2;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hc;
          wdsel = 2'h0;
          M_state_d = INP12B_state;
        end
        INP12MUL_state: begin
          alufn = 6'h00;
          asel = 2'h3;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hc;
          wdsel = 2'h0;
          M_state_d = INP12B_state;
        end
        INP12B_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER12B_state;
          end
          if (button3) begin
            M_state_d = INP123A_state;
          end
          if (button4) begin
            M_state_d = INP124A_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER12B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER12B_state;
        end
        CHECK_TIMER12B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER12B_state;
        end
        BRANCH_TIMER12B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER12B_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER12B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER12B_state;
        end
        BRANCH_RESULT_TIMER12B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER12B_state;
          end else begin
            M_state_d = RESET_RESULT_REG12B_state;
          end
        end
        RESET_RESULT_REG12B_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = INP12B_state;
        end
        DECREASE_RESULT_TIMER12B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = INP12B_state;
        end
        INP13A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h2;
          rc = 4'h8;
          wdsel = 2'h0;
          M_state_d = BRANCHINP13A_state;
        end
        BRANCHINP13A_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER13A_state;
          end
          if (plus_button) begin
            M_state_d = INP13ADD_state;
          end
          if (sub_button) begin
            M_state_d = INP13SUB_state;
          end
          if (mul_button) begin
            M_state_d = INP13MUL_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER13A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER13A_state;
        end
        CHECK_TIMER13A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER13A_state;
        end
        BRANCH_TIMER13A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER13A_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER13A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER13A_state;
        end
        BRANCH_RESULT_TIMER13A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER13A_state;
          end else begin
            M_state_d = RESET_RESULT_REG13A_state;
          end
        end
        RESET_RESULT_REG13A_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = BRANCHINP13A_state;
        end
        DECREASE_RESULT_TIMER13A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = BRANCHINP13A_state;
        end
        INP13ADD_state: begin
          alufn = 6'h00;
          asel = 2'h1;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hc;
          wdsel = 2'h0;
          M_state_d = INP13B_state;
        end
        INP13SUB_state: begin
          alufn = 6'h00;
          asel = 2'h2;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hc;
          wdsel = 2'h0;
          M_state_d = INP13B_state;
        end
        INP13MUL_state: begin
          alufn = 6'h00;
          asel = 2'h3;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hc;
          wdsel = 2'h0;
          M_state_d = INP13B_state;
        end
        INP13B_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER13B_state;
          end
          if (button2) begin
            M_state_d = INP132A_state;
          end
          if (button4) begin
            M_state_d = INP134A_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER13B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER13B_state;
        end
        CHECK_TIMER13B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER13B_state;
        end
        BRANCH_TIMER13B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER13B_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER13B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER13B_state;
        end
        BRANCH_RESULT_TIMER13B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER13B_state;
          end else begin
            M_state_d = RESET_RESULT_REG13B_state;
          end
        end
        RESET_RESULT_REG13B_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = INP13B_state;
        end
        DECREASE_RESULT_TIMER13B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = INP13B_state;
        end
        INP14A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h3;
          rc = 4'h8;
          wdsel = 2'h0;
          M_state_d = BRANCHINP14A_state;
        end
        BRANCHINP14A_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER14A_state;
          end
          if (plus_button) begin
            M_state_d = INP14ADD_state;
          end
          if (sub_button) begin
            M_state_d = INP14SUB_state;
          end
          if (mul_button) begin
            M_state_d = INP14MUL_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER14A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER14A_state;
        end
        CHECK_TIMER14A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER14A_state;
        end
        BRANCH_TIMER14A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER14A_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER14A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER14A_state;
        end
        BRANCH_RESULT_TIMER14A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER14A_state;
          end else begin
            M_state_d = RESET_RESULT_REG14A_state;
          end
        end
        RESET_RESULT_REG14A_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = BRANCHINP14A_state;
        end
        DECREASE_RESULT_TIMER14A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = BRANCHINP14A_state;
        end
        INP14ADD_state: begin
          alufn = 6'h00;
          asel = 2'h1;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hc;
          wdsel = 2'h0;
          M_state_d = INP14B_state;
        end
        INP14SUB_state: begin
          alufn = 6'h00;
          asel = 2'h2;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hc;
          wdsel = 2'h0;
          M_state_d = INP14B_state;
        end
        INP14MUL_state: begin
          alufn = 6'h00;
          asel = 2'h3;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hc;
          wdsel = 2'h0;
          M_state_d = INP14B_state;
        end
        INP14B_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER14B_state;
          end
          if (button2) begin
            M_state_d = INP142A_state;
          end
          if (button3) begin
            M_state_d = INP143A_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER14B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER14B_state;
        end
        CHECK_TIMER14B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER14B_state;
        end
        BRANCH_TIMER14B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER14B_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER14B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER14B_state;
        end
        BRANCH_RESULT_TIMER14B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER14B_state;
          end else begin
            M_state_d = RESET_RESULT_REG14B_state;
          end
        end
        RESET_RESULT_REG14B_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = INP14B_state;
        end
        DECREASE_RESULT_TIMER14B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = INP14B_state;
        end
        INP21A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h0;
          rc = 4'h8;
          wdsel = 2'h0;
          M_state_d = BRANCHINP12A_state;
        end
        INP23A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h2;
          rc = 4'h8;
          wdsel = 2'h0;
          M_state_d = BRANCHINP23A_state;
        end
        BRANCHINP23A_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER23A_state;
          end
          if (plus_button) begin
            M_state_d = INP23ADD_state;
          end
          if (sub_button) begin
            M_state_d = INP23SUB_state;
          end
          if (mul_button) begin
            M_state_d = INP23MUL_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER23A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER23A_state;
        end
        CHECK_TIMER23A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER23A_state;
        end
        BRANCH_TIMER23A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER23A_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER23A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER23A_state;
        end
        BRANCH_RESULT_TIMER23A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER23A_state;
          end else begin
            M_state_d = RESET_RESULT_REG23A_state;
          end
        end
        RESET_RESULT_REG23A_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = BRANCHINP23A_state;
        end
        DECREASE_RESULT_TIMER23A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = BRANCHINP23A_state;
        end
        INP23ADD_state: begin
          alufn = 6'h00;
          asel = 2'h1;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hc;
          wdsel = 2'h0;
          M_state_d = INP23B_state;
        end
        INP23SUB_state: begin
          alufn = 6'h00;
          asel = 2'h2;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hc;
          wdsel = 2'h0;
          M_state_d = INP23B_state;
        end
        INP23MUL_state: begin
          alufn = 6'h00;
          asel = 2'h3;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hc;
          wdsel = 2'h0;
          M_state_d = INP23B_state;
        end
        INP23B_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER23B_state;
          end
          if (button1) begin
            M_state_d = INP231A_state;
          end
          if (button4) begin
            M_state_d = INP234A_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER23B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER23B_state;
        end
        CHECK_TIMER23B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER23B_state;
        end
        BRANCH_TIMER23B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER23B_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER23B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER23B_state;
        end
        BRANCH_RESULT_TIMER23B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER23B_state;
          end else begin
            M_state_d = RESET_RESULT_REG23B_state;
          end
        end
        RESET_RESULT_REG23B_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = INP23B_state;
        end
        DECREASE_RESULT_TIMER23B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = INP23B_state;
        end
        INP24A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h3;
          rc = 4'h8;
          wdsel = 2'h0;
          M_state_d = BRANCHINP24A_state;
        end
        BRANCHINP24A_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER24A_state;
          end
          if (plus_button) begin
            M_state_d = INP24ADD_state;
          end
          if (sub_button) begin
            M_state_d = INP24SUB_state;
          end
          if (mul_button) begin
            M_state_d = INP24MUL_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER24A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER24A_state;
        end
        CHECK_TIMER24A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER24A_state;
        end
        BRANCH_TIMER24A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER24A_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER24A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER24A_state;
        end
        BRANCH_RESULT_TIMER24A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER24A_state;
          end else begin
            M_state_d = RESET_RESULT_REG24A_state;
          end
        end
        RESET_RESULT_REG24A_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = BRANCHINP24A_state;
        end
        DECREASE_RESULT_TIMER24A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = BRANCHINP24A_state;
        end
        INP24ADD_state: begin
          alufn = 6'h00;
          asel = 2'h1;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hc;
          wdsel = 2'h0;
          M_state_d = INP24B_state;
        end
        INP24SUB_state: begin
          alufn = 6'h00;
          asel = 2'h2;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hc;
          wdsel = 2'h0;
          M_state_d = INP24B_state;
        end
        INP24MUL_state: begin
          alufn = 6'h00;
          asel = 2'h3;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hc;
          wdsel = 2'h0;
          M_state_d = INP24B_state;
        end
        INP24B_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER24B_state;
          end
          if (button1) begin
            M_state_d = INP241A_state;
          end
          if (button3) begin
            M_state_d = INP243A_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER24B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER24B_state;
        end
        CHECK_TIMER24B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER24B_state;
        end
        BRANCH_TIMER24B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER24B_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER24B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER24B_state;
        end
        BRANCH_RESULT_TIMER24B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER24B_state;
          end else begin
            M_state_d = RESET_RESULT_REG24B_state;
          end
        end
        RESET_RESULT_REG24B_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = INP24B_state;
        end
        DECREASE_RESULT_TIMER24B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = INP24B_state;
        end
        INP31A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h0;
          rc = 4'h8;
          wdsel = 2'h0;
          M_state_d = BRANCHINP13A_state;
        end
        INP32A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h1;
          rc = 4'h8;
          wdsel = 2'h0;
          M_state_d = BRANCHINP23A_state;
        end
        INP34A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h3;
          rc = 4'h8;
          wdsel = 2'h0;
          M_state_d = BRANCHINP34A_state;
        end
        BRANCHINP34A_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER34A_state;
          end
          if (plus_button) begin
            M_state_d = INP34ADD_state;
          end
          if (sub_button) begin
            M_state_d = INP34SUB_state;
          end
          if (mul_button) begin
            M_state_d = INP34MUL_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER34A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER34A_state;
        end
        CHECK_TIMER34A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER34A_state;
        end
        BRANCH_TIMER34A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER34A_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER34A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER34A_state;
        end
        BRANCH_RESULT_TIMER34A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER34A_state;
          end else begin
            M_state_d = RESET_RESULT_REG34A_state;
          end
        end
        RESET_RESULT_REG34A_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = BRANCHINP34A_state;
        end
        DECREASE_RESULT_TIMER34A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = BRANCHINP34A_state;
        end
        INP34ADD_state: begin
          alufn = 6'h00;
          asel = 2'h1;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hc;
          wdsel = 2'h0;
          M_state_d = INP34B_state;
        end
        INP34SUB_state: begin
          alufn = 6'h00;
          asel = 2'h2;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hc;
          wdsel = 2'h0;
          M_state_d = INP34B_state;
        end
        INP34MUL_state: begin
          alufn = 6'h00;
          asel = 2'h3;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hc;
          wdsel = 2'h0;
          M_state_d = INP34B_state;
        end
        INP34B_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER34B_state;
          end
          if (button1) begin
            M_state_d = INP341A_state;
          end
          if (button2) begin
            M_state_d = INP342A_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER34B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER34B_state;
        end
        CHECK_TIMER34B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER34B_state;
        end
        BRANCH_TIMER34B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER34B_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER34B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER34B_state;
        end
        BRANCH_RESULT_TIMER34B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER34B_state;
          end else begin
            M_state_d = RESET_RESULT_REG34B_state;
          end
        end
        RESET_RESULT_REG34B_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = INP34B_state;
        end
        DECREASE_RESULT_TIMER34B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = INP34B_state;
        end
        INP41A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h0;
          rc = 4'h8;
          wdsel = 2'h0;
          M_state_d = BRANCHINP14A_state;
        end
        INP42A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h1;
          rc = 4'h8;
          wdsel = 2'h0;
          M_state_d = BRANCHINP24A_state;
        end
        INP43A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h2;
          rc = 4'h8;
          wdsel = 2'h0;
          M_state_d = BRANCHINP34A_state;
        end
        INP123A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h2;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = BRANCHINP123A_state;
        end
        BRANCHINP123A_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER123A_state;
          end
          if (plus_button) begin
            M_state_d = INP123ADD_state;
          end
          if (sub_button) begin
            M_state_d = INP123SUB_state;
          end
          if (mul_button) begin
            M_state_d = INP123MUL_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER123A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER123A_state;
        end
        CHECK_TIMER123A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER123A_state;
        end
        BRANCH_TIMER123A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER123A_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER123A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER123A_state;
        end
        BRANCH_RESULT_TIMER123A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER123A_state;
          end else begin
            M_state_d = RESET_RESULT_REG123A_state;
          end
        end
        RESET_RESULT_REG123A_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = BRANCHINP123A_state;
        end
        DECREASE_RESULT_TIMER123A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = BRANCHINP123A_state;
        end
        INP123ADD_state: begin
          alufn = 6'h00;
          asel = 2'h1;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hd;
          wdsel = 2'h0;
          M_state_d = INP123B_state;
        end
        INP123SUB_state: begin
          alufn = 6'h00;
          asel = 2'h2;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hd;
          wdsel = 2'h0;
          M_state_d = INP123B_state;
        end
        INP123MUL_state: begin
          alufn = 6'h00;
          asel = 2'h3;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hd;
          wdsel = 2'h0;
          M_state_d = INP123B_state;
        end
        INP123B_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER123B_state;
          end
          if (button4) begin
            M_state_d = INPXXX4_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER123B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER123B_state;
        end
        CHECK_TIMER123B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER123B_state;
        end
        BRANCH_TIMER123B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER123B_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER123B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER123B_state;
        end
        BRANCH_RESULT_TIMER123B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER123B_state;
          end else begin
            M_state_d = RESET_RESULT_REG123B_state;
          end
        end
        RESET_RESULT_REG123B_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = INP123B_state;
        end
        DECREASE_RESULT_TIMER123B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = INP123B_state;
        end
        INP124A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h3;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = BRANCHINP124A_state;
        end
        BRANCHINP124A_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER124A_state;
          end
          if (plus_button) begin
            M_state_d = INP124ADD_state;
          end
          if (sub_button) begin
            M_state_d = INP124SUB_state;
          end
          if (mul_button) begin
            M_state_d = INP124MUL_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER124A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER124A_state;
        end
        CHECK_TIMER124A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER124A_state;
        end
        BRANCH_TIMER124A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER124A_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER124A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER124A_state;
        end
        BRANCH_RESULT_TIMER124A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER124A_state;
          end else begin
            M_state_d = RESET_RESULT_REG124A_state;
          end
        end
        RESET_RESULT_REG124A_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = BRANCHINP124A_state;
        end
        DECREASE_RESULT_TIMER124A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = BRANCHINP124A_state;
        end
        INP124ADD_state: begin
          alufn = 6'h00;
          asel = 2'h1;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hd;
          wdsel = 2'h0;
          M_state_d = INP124B_state;
        end
        INP124SUB_state: begin
          alufn = 6'h00;
          asel = 2'h2;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hd;
          wdsel = 2'h0;
          M_state_d = INP124B_state;
        end
        INP124MUL_state: begin
          alufn = 6'h00;
          asel = 2'h3;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hd;
          wdsel = 2'h0;
          M_state_d = INP124B_state;
        end
        INP124B_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER124B_state;
          end
          if (button3) begin
            M_state_d = INPXXX3_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER124B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER124B_state;
        end
        CHECK_TIMER124B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER124B_state;
        end
        BRANCH_TIMER124B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER124B_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER124B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER124B_state;
        end
        BRANCH_RESULT_TIMER124B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER124B_state;
          end else begin
            M_state_d = RESET_RESULT_REG124B_state;
          end
        end
        RESET_RESULT_REG124B_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = INP124B_state;
        end
        DECREASE_RESULT_TIMER124B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = INP124B_state;
        end
        INP132A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h1;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = BRANCHINP123A_state;
        end
        INP134A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h3;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = BRANCHINP134A_state;
        end
        BRANCHINP134A_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER134A_state;
          end
          if (plus_button) begin
            M_state_d = INP134ADD_state;
          end
          if (sub_button) begin
            M_state_d = INP134SUB_state;
          end
          if (mul_button) begin
            M_state_d = INP134MUL_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER134A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER134A_state;
        end
        CHECK_TIMER134A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER134A_state;
        end
        BRANCH_TIMER134A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER134A_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER134A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER134A_state;
        end
        BRANCH_RESULT_TIMER134A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER134A_state;
          end else begin
            M_state_d = RESET_RESULT_REG134A_state;
          end
        end
        RESET_RESULT_REG134A_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = BRANCHINP134A_state;
        end
        DECREASE_RESULT_TIMER134A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = BRANCHINP134A_state;
        end
        INP134ADD_state: begin
          alufn = 6'h00;
          asel = 2'h1;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hd;
          wdsel = 2'h0;
          M_state_d = INP134B_state;
        end
        INP134SUB_state: begin
          alufn = 6'h00;
          asel = 2'h2;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hd;
          wdsel = 2'h0;
          M_state_d = INP134B_state;
        end
        INP134MUL_state: begin
          alufn = 6'h00;
          asel = 2'h3;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hd;
          wdsel = 2'h0;
          M_state_d = INP134B_state;
        end
        INP134B_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER134B_state;
          end
          if (button2) begin
            M_state_d = INPXXX2_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER134B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER134B_state;
        end
        CHECK_TIMER134B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER134B_state;
        end
        BRANCH_TIMER134B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER134B_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER134B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER134B_state;
        end
        BRANCH_RESULT_TIMER134B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER134B_state;
          end else begin
            M_state_d = RESET_RESULT_REG134B_state;
          end
        end
        RESET_RESULT_REG134B_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = INP134B_state;
        end
        DECREASE_RESULT_TIMER134B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h1;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = INP134B_state;
        end
        INP142A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h1;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = BRANCHINP124A_state;
        end
        INP143A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h2;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = BRANCHINP134A_state;
        end
        INP231A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h0;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = BRANCHINP123A_state;
        end
        INP234A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h3;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = BRANCHINP234A_state;
        end
        BRANCHINP234A_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER234A_state;
          end
          if (plus_button) begin
            M_state_d = INP234ADD_state;
          end
          if (sub_button) begin
            M_state_d = INP234SUB_state;
          end
          if (mul_button) begin
            M_state_d = INP234MUL_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER234A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER234A_state;
        end
        CHECK_TIMER234A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER234A_state;
        end
        BRANCH_TIMER234A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER234A_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER234A_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER234A_state;
        end
        BRANCH_RESULT_TIMER234A_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER234A_state;
          end else begin
            M_state_d = RESET_RESULT_REG234A_state;
          end
        end
        RESET_RESULT_REG234A_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = BRANCHINP234A_state;
        end
        DECREASE_RESULT_TIMER234A_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h1;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = BRANCHINP234A_state;
        end
        INP234ADD_state: begin
          alufn = 6'h00;
          asel = 2'h1;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hd;
          wdsel = 2'h0;
          M_state_d = INP234B_state;
        end
        INP234SUB_state: begin
          alufn = 6'h00;
          asel = 2'h2;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hd;
          wdsel = 2'h0;
          M_state_d = INP234B_state;
        end
        INP234MUL_state: begin
          alufn = 6'h00;
          asel = 2'h3;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'hd;
          wdsel = 2'h0;
          M_state_d = INP234B_state;
        end
        INP234B_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER234B_state;
          end
          if (button1) begin
            M_state_d = INPXXX1_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER234B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER234B_state;
        end
        CHECK_TIMER234B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER234B_state;
        end
        BRANCH_TIMER234B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER234B_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER234B_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER234B_state;
        end
        BRANCH_RESULT_TIMER234B_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER234B_state;
          end else begin
            M_state_d = RESET_RESULT_REG234B_state;
          end
        end
        RESET_RESULT_REG234B_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = INP234B_state;
        end
        DECREASE_RESULT_TIMER234B_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = INP234B_state;
        end
        INP241A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h0;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = BRANCHINP124A_state;
        end
        INP243A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h2;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = BRANCHINP234A_state;
        end
        INP341A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h0;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = BRANCHINP134A_state;
        end
        INP342A_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h1;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = BRANCHINP234A_state;
        end
        INPXXX1_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h0;
          rc = 4'ha;
          wdsel = 2'h0;
          M_state_d = CONFIRM_state;
        end
        INPXXX2_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h1;
          rc = 4'ha;
          wdsel = 2'h0;
          M_state_d = CONFIRM_state;
        end
        INPXXX3_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h2;
          rc = 4'ha;
          wdsel = 2'h0;
          M_state_d = CONFIRM_state;
        end
        INPXXX4_state: begin
          alufn = 6'h00;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h3;
          rc = 4'ha;
          wdsel = 2'h0;
          M_state_d = CONFIRM_state;
        end
        CONFIRM_state: begin
          we = 1'h0;
          if (st) begin
            M_state_d = DECREASE_TIMER_CONFIRM_state;
          end
          if (confirm_button) begin
            M_state_d = OP1X_state;
          end
          if (reset_button) begin
            M_state_d = RESET_FIRST_INPUT_state;
          end
        end
        DECREASE_TIMER_CONFIRM_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'h6;
          wdsel = 2'h0;
          timer_decrease = 1'h1;
          M_state_d = CHECK_TIMER_CONFIRM_state;
        end
        CHECK_TIMER_CONFIRM_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'h6;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_TIMER_CONFIRM_state;
        end
        BRANCH_TIMER_CONFIRM_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = CHECK_RESULT_TIMER_CONFIRM_state;
          end else begin
            M_state_d = GAMEOVER_state;
          end
        end
        CHECK_RESULT_TIMER_CONFIRM_state: begin
          alufn = 6'h33;
          asel = 2'h0;
          bsel = 2'h2;
          we = 1'h1;
          ra = 4'he;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_RESULT_TIMER_CONFIRM_state;
        end
        BRANCH_RESULT_TIMER_CONFIRM_state: begin
          rb = 4'hf;
          if (~rbdata[0+0-:1]) begin
            M_state_d = DECREASE_RESULT_TIMER_CONFIRM_state;
          end else begin
            M_state_d = RESET_RESULT_REG_CONFIRM_state;
          end
        end
        RESET_RESULT_REG_CONFIRM_state: begin
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h1;
          M_state_d = CONFIRM_state;
        end
        DECREASE_RESULT_TIMER_CONFIRM_state: begin
          alufn = 6'h01;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'he;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = CONFIRM_state;
        end
        OP1X_state: begin
          alufn = 17'h1adbb;
          asel = 2'h3;
          bsel = 2'h0;
          we = 1'h1;
          rb = 4'hb;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCHOP1X_state;
        end
        BRANCHOP1X_state: begin
          we = 1'h0;
          rb = 4'hf;
          if (rbdata[0+0-:1]) begin
            M_state_d = OP1AB_state;
          end else begin
            M_state_d = OP2X_state;
          end
        end
        OP1AB_state: begin
          alufn = 4'ha;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h7;
          rb = 4'h8;
          rc = 4'h8;
          wdsel = 2'h0;
          M_state_d = OP12X_state;
        end
        OP12X_state: begin
          alufn = 17'h1adbb;
          asel = 2'h3;
          bsel = 2'h0;
          we = 1'h1;
          rb = 4'hc;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCHOP12X_state;
        end
        BRANCHOP12X_state: begin
          we = 1'h0;
          rb = 4'hf;
          if (rbdata[0+0-:1]) begin
            M_state_d = OP12BC_state;
          end else begin
            M_state_d = OP13X_state;
          end
        end
        OP12BC_state: begin
          alufn = 4'ha;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h8;
          rb = 4'h9;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = OP123X_state;
        end
        OP123X_state: begin
          alufn = 17'h1adbb;
          asel = 2'h3;
          bsel = 2'h0;
          we = 1'h1;
          rb = 4'hd;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCHOP123X_state;
        end
        BRANCHOP123X_state: begin
          we = 1'h0;
          rb = 4'hf;
          if (rbdata[0+0-:1]) begin
            M_state_d = OP123CD_state;
          end else begin
            M_state_d = OP123_state;
          end
        end
        OP123CD_state: begin
          alufn = 4'ha;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h9;
          rb = 4'ha;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = CHECK_C24_state;
        end
        OP123_state: begin
          alufn = 17'h1adbb;
          asel = 2'h2;
          bsel = 2'h0;
          we = 1'h1;
          rb = 4'hd;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCHOP123_state;
        end
        BRANCHOP123_state: begin
          we = 1'h0;
          rb = 4'hf;
          if (rbdata[0+0-:1]) begin
            M_state_d = OP123CD1_state;
          end else begin
            M_state_d = OP123CD2_state;
          end
        end
        OP123CD1_state: begin
          alufn = 1'h1;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h9;
          rb = 4'ha;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = CHECK_C24_state;
        end
        OP123CD2_state: begin
          alufn = 1'h0;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h9;
          rb = 4'ha;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = CHECK_C24_state;
        end
        OP13X_state: begin
          alufn = 17'h1adbb;
          asel = 2'h3;
          bsel = 2'h0;
          we = 1'h1;
          rb = 4'hd;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCHOP13X_state;
        end
        BRANCHOP13X_state: begin
          we = 1'h0;
          rb = 4'hf;
          if (rbdata[0+0-:1]) begin
            M_state_d = OP13CD_state;
          end else begin
            M_state_d = OP12_state;
          end
        end
        OP13CD_state: begin
          alufn = 4'ha;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h9;
          rb = 4'ha;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = OP132_state;
        end
        OP132_state: begin
          alufn = 17'h1adbb;
          asel = 2'h2;
          bsel = 2'h0;
          we = 1'h1;
          rb = 4'hc;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCHOP132_state;
        end
        BRANCHOP132_state: begin
          we = 1'h0;
          rb = 4'hf;
          if (rbdata[0+0-:1]) begin
            M_state_d = OP132BC1_state;
          end else begin
            M_state_d = OP132BC2_state;
          end
        end
        OP132BC1_state: begin
          alufn = 1'h1;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h8;
          rb = 4'h9;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = CHECK_C24_state;
        end
        OP132BC2_state: begin
          alufn = 1'h0;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h8;
          rb = 4'h9;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = CHECK_C24_state;
        end
        OP12_state: begin
          alufn = 17'h1adbb;
          asel = 2'h2;
          bsel = 2'h0;
          we = 1'h1;
          rb = 4'hc;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCHOP12_state;
        end
        BRANCHOP12_state: begin
          we = 1'h0;
          rb = 4'hf;
          if (rbdata[0+0-:1]) begin
            M_state_d = OP12BC1_state;
          end else begin
            M_state_d = OP12BC2_state;
          end
        end
        OP12BC1_state: begin
          alufn = 1'h1;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h8;
          rb = 4'h9;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = OP123_state;
        end
        OP12BC2_state: begin
          alufn = 1'h0;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h8;
          rb = 4'h9;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = OP123_state;
        end
        OP2X_state: begin
          alufn = 17'h1adbb;
          asel = 2'h3;
          bsel = 2'h0;
          we = 1'h1;
          rb = 4'hc;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCHOP2X_state;
        end
        BRANCHOP2X_state: begin
          we = 1'h0;
          rb = 4'hf;
          if (rbdata[0+0-:1]) begin
            M_state_d = OP2BC_state;
          end else begin
            M_state_d = OP3X_state;
          end
        end
        OP2BC_state: begin
          alufn = 4'ha;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h8;
          rb = 4'h9;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = OP23X_state;
        end
        OP23X_state: begin
          alufn = 17'h1adbb;
          asel = 2'h3;
          bsel = 2'h0;
          we = 1'h1;
          rb = 4'hd;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCHOP23X_state;
        end
        BRANCHOP23X_state: begin
          we = 1'h0;
          rb = 4'hf;
          if (rbdata[0+0-:1]) begin
            M_state_d = OP23CD_state;
          end else begin
            M_state_d = OP21_state;
          end
        end
        OP23CD_state: begin
          alufn = 4'ha;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h9;
          rb = 4'ha;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = OP231_state;
        end
        OP231_state: begin
          alufn = 17'h1adbb;
          asel = 2'h2;
          bsel = 2'h0;
          we = 1'h1;
          rb = 4'hb;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCHOP231_state;
        end
        BRANCHOP231_state: begin
          we = 1'h0;
          rb = 4'hf;
          if (rbdata[0+0-:1]) begin
            M_state_d = OP231AC1_state;
          end else begin
            M_state_d = OP231AC2_state;
          end
        end
        OP231AC1_state: begin
          alufn = 1'h1;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h7;
          rb = 4'h9;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = CHECK_C24_state;
        end
        OP231AC2_state: begin
          alufn = 1'h0;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h7;
          rb = 4'h9;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = CHECK_C24_state;
        end
        OP21_state: begin
          alufn = 17'h1adbb;
          asel = 2'h2;
          bsel = 2'h0;
          we = 1'h1;
          rb = 4'hb;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCHOP21_state;
        end
        BRANCHOP21_state: begin
          we = 1'h0;
          rb = 4'hf;
          if (rbdata[0+0-:1]) begin
            M_state_d = OP21AC1_state;
          end else begin
            M_state_d = OP21AC2_state;
          end
        end
        OP21AC1_state: begin
          alufn = 1'h1;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h7;
          rb = 4'h9;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = OP123_state;
        end
        OP21AC2_state: begin
          alufn = 1'h0;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h7;
          rb = 4'h9;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = OP123_state;
        end
        OP3X_state: begin
          alufn = 17'h1adbb;
          asel = 2'h3;
          bsel = 2'h0;
          we = 1'h1;
          rb = 4'hd;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCHOP3X_state;
        end
        BRANCHOP3X_state: begin
          we = 1'h0;
          rb = 4'hf;
          if (rbdata[0+0-:1]) begin
            M_state_d = OP3CD_state;
          end else begin
            M_state_d = OP1_state;
          end
        end
        OP3CD_state: begin
          alufn = 4'ha;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h9;
          rb = 4'ha;
          rc = 4'h9;
          wdsel = 2'h0;
          M_state_d = OP31_state;
        end
        OP31_state: begin
          alufn = 17'h1adbb;
          asel = 2'h2;
          bsel = 2'h0;
          we = 1'h1;
          rb = 4'hb;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCHOP31_state;
        end
        BRANCHOP31_state: begin
          we = 1'h0;
          rb = 4'hf;
          if (rbdata[0+0-:1]) begin
            M_state_d = OP31AB1_state;
          end else begin
            M_state_d = OP31AB2_state;
          end
        end
        OP31AB1_state: begin
          alufn = 1'h1;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h7;
          rb = 4'h8;
          rc = 4'h8;
          wdsel = 2'h0;
          M_state_d = OP132_state;
        end
        OP31AB2_state: begin
          alufn = 1'h0;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h7;
          rb = 4'h8;
          rc = 4'h8;
          wdsel = 2'h0;
          M_state_d = OP132_state;
        end
        OP1_state: begin
          alufn = 17'h1adbb;
          asel = 2'h2;
          bsel = 2'h0;
          we = 1'h1;
          rb = 4'hb;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCHOP1_state;
        end
        BRANCHOP1_state: begin
          we = 1'h0;
          rb = 4'hf;
          if (rbdata[0+0-:1]) begin
            M_state_d = OP1AB1_state;
          end else begin
            M_state_d = OP1AB2_state;
          end
        end
        OP1AB1_state: begin
          alufn = 1'h1;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h7;
          rb = 4'h8;
          rc = 4'h8;
          wdsel = 2'h0;
          M_state_d = OP12_state;
        end
        OP1AB2_state: begin
          alufn = 1'h0;
          asel = 2'h0;
          bsel = 2'h0;
          we = 1'h1;
          ra = 4'h7;
          rb = 4'h8;
          rc = 4'h8;
          wdsel = 2'h0;
          M_state_d = OP12_state;
        end
        CHECK_C24_state: begin
          alufn = 17'h1adbb;
          asel = 2'h0;
          bsel = 2'h1;
          we = 1'h1;
          ra = 4'h9;
          rc = 4'hf;
          wdsel = 2'h0;
          M_state_d = BRANCH_CHECK_C24_state;
        end
        BRANCH_CHECK_C24_state: begin
          we = 1'h0;
          rb = 4'hf;
          if (rbdata[0+0-:1]) begin
            M_state_d = GREEN_LED_state;
          end else begin
            M_state_d = RED_LED_state;
          end
        end
        GREEN_LED_state: begin
          alufn = 1'h0;
          asel = 2'h2;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h0;
          M_state_d = GREEN_LED_TIMER_state;
        end
        GREEN_LED_TIMER_state: begin
          alufn = 1'h0;
          asel = 2'h3;
          bsel = 2'h3;
          we = 1'h1;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = ADD_POINT_state;
        end
        ADD_POINT_state: begin
          alufn = 1'h0;
          asel = 2'h0;
          bsel = 2'h3;
          we = 1'h1;
          ra = 4'h5;
          rc = 4'h5;
          wdsel = 2'h0;
          M_state_d = RANDSEL_state;
        end
        RED_LED_state: begin
          alufn = 1'h0;
          asel = 2'h1;
          bsel = 2'h2;
          we = 1'h1;
          rc = 4'h4;
          wdsel = 2'h0;
          M_state_d = RED_LED_TIMER_state;
        end
        RED_LED_TIMER_state: begin
          alufn = 1'h0;
          asel = 2'h3;
          bsel = 2'h3;
          we = 1'h1;
          rc = 4'he;
          wdsel = 2'h0;
          M_state_d = RESET_FIRST_INPUT_state;
        end
      endcase
    end
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_state_q <= 1'h0;
    end else begin
      M_state_q <= M_state_d;
    end
  end
  
endmodule
