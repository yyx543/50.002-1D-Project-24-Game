module input_integers (
    input clk,  // clock
    input rst,  // reset
    input randsel,
    input numsel[2],
    
    output int_input[4]
  ) {
    
  sig a[4], b[4], c[4], d[4];
  
  .clk(clk){
    dff seed[16];
    dff num_gen[3];
    .rst(rst){
      pn_gen rand_num;
    }
  }

  always {
  
    rand_num.seed = seed.q;
    rand_num.next = 1;
    
    if (randsel){
      num_gen.d = rand_num.num[2:0];
    }
    
    case(num_gen.q){
      0:
        a = 4;
        b = 2;
        c = 1;
        d = 3;
      1:
        a = 4;
        b = 4;
        c = 7;
        d = 1;
      2:
        a = 5;
        b = 6;
        c = 6;
        d = 1;
      3:
        a = 8;
        b = 2;
        c = 4;
        d = 4;
      4:
        a = 8;
        b = 4;
        c = 5;
        d = 4;
      5:
        a = 8;
        b = 8;
        c = 9;
        d = 6;
      6:
        a = 2;
        b = 2;
        c = 5;
        d = 7;
      7:
        a = 2;
        b = 8;
        c = 8;
        d = 2;
      8:
        a = 3;
        b = 5;
        c = 8;
        d = 2;
      9:
        a = 5;
        b = 7;
        c = 5;
        d = 7;
      10:
        a = 3;
        b = 3;
        c = 3;
        d = 3;
      11:
        a = 5;
        b = 5;
        c = 6;
        d = 7;
      12:
        a = 3;
        b = 6;
        c = 8;
        d = 8;
      13:
        a = 3;
        b = 5;
        c = 7;
        d = 9;
      14:
        a = 2;
        b = 3;
        c = 9;
        d = 2;
      15:
        a = 3;
        b = 3;
        c = 3;
        d = 5;
      default:
        a = 4;
        b = 2;
        c = 1;
        d = 3;
    }
        
    case(numsel){
      b00:
        int_input = a;
      b01:
        int_input = b;
      b10:
        int_input = c;
      b11:
        int_input = d;
      default:
        int_input = a;
    }
  }
}
